config {type:"operations"}

DECLARE startdate DATE DEFAULT '2018-10-03';
DECLARE NDAYS INT64 DEFAULT 30;

-- Create table with column for each day from the last day(startday)
WITH data AS(
SELECT * FROM(
  SELECT *,PARSE_DATE('%Y%m%d',_TABLE_SUFFIX) day
  FROM ${ref('events_*')}) 
WHERE  day<=startdate),

--Create set with data in respect that we need first 30 days for the first date, to reflect data correctly
daysN AS(
SELECT * FROM data
WHERE day>=DATE_ADD(STARTDATE, INTERVAL-76 DAY)
),

--Create table including whole range of analysing data
days60 AS(
  SELECT * FROM data
  WHERE day>=DATE_ADD(STARTDATE, INTERVAL -106 DAY)
),

--Set of final range of data
stopdays AS(
  SELECT DISTINCT day stopday FROM data
 WHERE day>=DATE_ADD(STARTDATE, INTERVAL-76 DAY) 
),

--Find MAU
maus AS(
  SELECT stopday,COUNT(DISTINCT(d6.user_pseudo_id)) AS mau
  FROM days60 as d6 
  JOIN stopdays
  ON day 
  BETWEEN DATE_ADD(stopday , INTERVAL -NDAYS DAY) AND stopday 
  GROUP BY stopday 
 ),


 prep_maus AS (
  SELECT stopday, LAG (mau,NDAYS,NULL)OVER(ORDER BY stopday) as l_mau
  FROM maus AS m 
 
 ) ,

--Find MAU_LAG and MOM growth rate
mau_with_lag AS(
 SELECT maus.stopday stopday, maus.mau mau,prep_maus.l_mau l_mau, 
 ROUND(CAST((mau-l_mau)/l_mau AS FLOAT64),2) AS growth
 FROM maus
 LEFT JOIN prep_maus
 ON maus.stopday=prep_maus.stopday
 ORDER BY maus.stopday
)



-- Find DAU and DAU/MAU
 SELECT day, dau, mausers,ROUND(100*dau/mausers,2) daumau,growthrate
 FROM (
  SELECT day, COUNT(DISTINCT user_pseudo_id) dau,
  (SELECT mau FROM mau_with_lag WHERE a.day=mau_with_lag.stopday) mausers,
  (SELECT growth FROM mau_with_lag WHERE a.day=mau_with_lag.stopday) growthrate

  FROM daysN a
  GROUP BY day
 )
 ORDER BY day;